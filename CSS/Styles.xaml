<ResourceDictionary xmlns:local="clr-namespace:WpfXmlDemo"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"                    
                    >    
    
    <!--<Color x:Key="WindowBackgroundColor">#202020</Color>
    <Color x:Key="BackgroundColor">#404040</Color>
    <Color x:Key="ControlBackgroundColor">#FF646464</Color>
    <Color x:Key="ButtonColor">#FF8C8C8C</Color>
    <Color x:Key="TextColor">#FFFFFF</Color>   
    <Color x:Key="BorderBackgroundColor">#404040</Color>
    <Color x:Key="BorderColor">#404040</Color>
    <Color x:Key="SelectedBorderColor">#FFFFFF</Color>
    <Color x:Key="StatusColorOne">#FFFF6347</Color>
    <Color x:Key="StatusColorTwo">#FFFFDAB9</Color>
    <Color x:Key="StatusColorThree">#FFDEFFAB</Color>-->
    <Color x:Key="WindowBackgroundColor">White</Color>
    <Color x:Key="BackgroundColor">White</Color>
    <Color x:Key="ControlBackgroundColor">White</Color>
    <Color x:Key="ButtonColor">#FF8C8C8C</Color>
    <Color x:Key="TextColor">Black</Color>
    <Color x:Key="BorderBackgroundColor">White</Color>
    <Color x:Key="BorderColor">White</Color>
    <Color x:Key="SelectedBorderColor">White</Color>
    <Color x:Key="StatusColorOne">White</Color>
    <Color x:Key="StatusColorTwo">White</Color>
    <Color x:Key="StatusColorThree">White</Color>
    
    <!-- every TextBox with property Style="{StaticResource TextBoxBaseStyle}" will use this style -->
    <Style x:Key="TextBoxBaseStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource ControlBackgroundColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource TextColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="Margin" Value="4,4,4,4"/>       
        <!--<Setter Property="BorderBrush">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource BorderColor}"/>
            </Setter.Value>
        </Setter>-->
        <!--<Setter Property="Template" Value="{StaticResource TextBoxTemplateBase}"/>-->
    </Style>
    <!-- every ListBoxItem with property Style="{StaticResource ListBoxItemBaseStyle}" will use this style -->
    <Style x:Key="ListBoxItemBaseStyle" TargetType="ListBoxItem">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource WindowBackgroundColor}" />
            </Setter.Value>
        </Setter>
    </Style>
    
    <Style x:Key="LabelBaseStyle" TargetType="{x:Type Label}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="Transparent"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource TextColor}"/>
            </Setter.Value>
        </Setter>
        <Setter Property="Padding" Value="8 4"/>
        <Setter Property="HorizontalAlignment" Value="Stretch"/>
        <Setter Property="HorizontalContentAlignment" Value="Left"/>
        <Setter Property="VerticalAlignment" Value="Stretch"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/> 
        
    </Style>
    <Style x:Key="ButtonBaseStyle" TargetType="{x:Type Button}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource BackgroundColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="Foreground">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource TextColor}"/>
            </Setter.Value>
        </Setter>
        
    </Style>
    <Style x:Key="WindowBaseStyle" TargetType="{x:Type Window}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource WindowBackgroundColor}" />
            </Setter.Value>
        </Setter>
    </Style>
    <Style x:Key="ScrollViewerBaseStyle" TargetType="{x:Type ScrollViewer}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="Beige" />
            </Setter.Value>
        </Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch">
        </Setter>
        <Setter Property="VerticalAlignment" Value="Stretch">
        </Setter>    
    </Style>
    <Style x:Key="DockPanelBaseStyle" TargetType="{x:Type DockPanel}">
        <!--<Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource WindowBackgroundColor}" />
            </Setter.Value>
        </Setter>-->
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
    </Style>
    <Style x:Key="StackPanelBaseStyle" TargetType="{x:Type StackPanel}">
        <Setter Property="Background">
            <Setter.Value>
                <SolidColorBrush Color="{StaticResource WindowBackgroundColor}" />
            </Setter.Value>
        </Setter>
        <Setter Property="VerticalAlignment" Value="Stretch"></Setter>
        <Setter Property="HorizontalAlignment" Value="Stretch"></Setter>
     </Style>
    <Style x:Key="BorderBaseStyle" TargetType="{x:Type Border}">
        <Setter Property="CornerRadius" Value="5"></Setter>        
        <Setter Property="Border.BorderThickness" Value="2,2,1,1"></Setter>
        <Setter Property="Border.BorderBrush" Value="#FF2543FF"></Setter>
        <Style.Triggers>
            <Trigger Property="Border.IsMouseOver" Value="True">
                <Setter Property="Border.BorderBrush" Value="LightBlue" />
            </Trigger>
        </Style.Triggers>        
    </Style>
</ResourceDictionary>